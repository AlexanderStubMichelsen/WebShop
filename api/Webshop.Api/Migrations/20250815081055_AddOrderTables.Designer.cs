// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Webshop.Api.Data;

#nullable disable

namespace Webshop.Api.Migrations
{
    [DbContext(typeof(WebshopDbContext))]
    [Migration("20250815081055_AddOrderTables")]
    partial class AddOrderTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("Webshop.Api.Models.EmailLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SentAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SessionId")
                        .IsUnique();

                    b.ToTable("EmailLogs");
                });

            modelBuilder.Entity("Webshop.Api.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Metadata")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentIntentId")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<long>("SubtotalAmount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TaxAmount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TotalAmount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("SessionId")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Webshop.Api.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TotalPrice")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UnitPrice")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Webshop.Api.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Durable and stylish, made from recycled materials.",
                            ImageUrl = "https://picsum.photos/300?random=1",
                            Name = "Eco-Friendly Backpack",
                            Price = 49.99m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "High-quality sound and comfort for work or play.",
                            ImageUrl = "https://picsum.photos/300?random=2",
                            Name = "Noise Cancelling Headphones",
                            Price = 129.99m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Touch control and adjustable lighting modes.",
                            ImageUrl = "https://picsum.photos/300?random=3",
                            Name = "Smart LED Lamp",
                            Price = 24.99m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Sleek and simple design with a leather strap.",
                            ImageUrl = "https://picsum.photos/300?random=4",
                            Name = "Minimalist Wristwatch",
                            Price = 89.99m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 5,
                            Description = "Portable speaker with crystal clear sound and 12-hour battery life.",
                            ImageUrl = "https://picsum.photos/300?random=5",
                            Name = "Wireless Bluetooth Speaker",
                            Price = 79.99m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 6,
                            Description = "Soft, breathable, and sustainably made.",
                            ImageUrl = "https://picsum.photos/300?random=6",
                            Name = "Organic Cotton T-Shirt",
                            Price = 19.99m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 7,
                            Description = "Keep drinks cold for 24 hours or hot for 12 hours.",
                            ImageUrl = "https://picsum.photos/300?random=7",
                            Name = "Stainless Steel Water Bottle",
                            Price = 34.99m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 8,
                            Description = "Lumbar support and adjustable height for all-day comfort.",
                            ImageUrl = "https://picsum.photos/300?random=8",
                            Name = "Ergonomic Office Chair",
                            Price = 199.99m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 9,
                            Description = "Adjustable aluminum stand compatible with all phone sizes.",
                            ImageUrl = "https://picsum.photos/300?random=9",
                            Name = "Smartphone Stand",
                            Price = 14.99m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 10,
                            Description = "Ultra-soft fleece blanket perfect for movie nights.",
                            ImageUrl = "https://picsum.photos/300?random=10",
                            Name = "Cozy Throw Blanket",
                            Price = 39.99m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 11,
                            Description = "Eco-friendly kitchen essential with 3 different sizes.",
                            ImageUrl = "https://picsum.photos/300?random=11",
                            Name = "Bamboo Cutting Board Set",
                            Price = 29.99m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 12,
                            Description = "Complete set of 5 bands for full-body workouts at home.",
                            ImageUrl = "https://picsum.photos/300?random=12",
                            Name = "Fitness Resistance Bands",
                            Price = 24.99m,
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("Webshop.Api.Models.OrderItem", b =>
                {
                    b.HasOne("Webshop.Api.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Webshop.Api.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
