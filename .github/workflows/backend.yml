name: Deploy Webshop Backend

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run Tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore api/Webshop.sln

      - name: Build
        run: dotnet build api/Webshop.sln -c Release --no-restore

      - name: Test
        run: dotnet test api/Webshop.sln -c Release --no-build --verbosity normal

  migrate_and_deploy:
    runs-on: ubuntu-latest
    needs: test
    name: Migrate DB and Deploy
    env:
      # Prod-DB connection string som secret (bruges af EF migrations)
      ConnectionStrings__DefaultConnection: ${{ secrets.PROD_CONNECTION_STRING }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # LØSNING A: eksplicit restore før EF
      - name: Restore (solution)
        run: dotnet restore api/Webshop.sln

      - name: Install dotnet-ef
        run: dotnet tool install --global dotnet-ef || true

      - name: Add dotnet tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Apply EF Core migrations (prod DB)
        working-directory: api/Webshop.Api
        run: dotnet ef database update --no-build --configuration Release

      - name: Publish API
        run: dotnet publish api/Webshop.Api/Webshop.Api.csproj -c Release -o api/Webshop.Api/publish

      - name: Verify publish not empty
        run: |
          shopt -s nullglob
          files=(api/Webshop.Api/publish/*)
          if [ ${#files[@]} -eq 0 ]; then
            echo "::error::Publish folder is empty"
            exit 1
          fi

      - name: List publish
        run: ls -l api/Webshop.Api/publish

      - name: Copy build to server via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "api/Webshop.Api/publish/**"
          target: ${{ secrets.SERVER_BACKEND_PATH }}
          overwrite: true

      - name: Reload service with secrets
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            sudo systemctl stop webshop-api.service || true
            sudo mkdir -p /etc/systemd/system/webshop-api.service.d
            cat >/tmp/override.conf << 'EOF'
            [Service]
            Environment="SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}"
            Environment="STRIPE__SecretKey=${{ secrets.STRIPE_SECRET_KEY }}"
            Environment="STRIPE__WebhookSecret=${{ secrets.STRIPE_WEBHOOK_SECRET }}"
            EOF
            sudo mv /tmp/override.conf /etc/systemd/system/webshop-api.service.d/override.conf
            sudo chmod 644 /etc/systemd/system/webshop-api.service.d/override.conf
            sudo systemctl daemon-reload
            sudo systemctl start webshop-api.service
            sudo systemctl status webshop-api.service --no-pager -l || true
